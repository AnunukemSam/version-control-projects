pipeline {
    agent any
    environment {
        PYTHONPATH = "${env.PYTHONPATH}:/var/lib/jenkins/workspace/SearchAppPipeline/basic-search-app/src"
    }
    stages {
        stage('Clone Repository') {
            steps {
                checkout scm
            }
        }
        stage('Install Dependencies') {
            steps {
                script {
                    // Create a virtual environment and install dependencies
                    sh """
                        if [ -d "venv" ]; then rm -rf venv; fi
                        python3 -m venv venv
                        . venv/bin/activate
                        pip install --upgrade pip
                        pip install -r basic-search-app/src/requirements.txt
                    """
                }
            }
        }
        stage('Run Tests') {
            steps {
                script {
                    // Run tests and fail the build if tests fail
                    sh """
                        . venv/bin/activate
                        pytest basic-search-app/src/tests || exit 1
                    """
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh """
                        docker build -t search-app .
                    """
                }
            }
        }
        stage('Run Docker Container') {
            steps {
                script {
                    // Run Docker container in detached mode
                    sh """
                        docker run -d -p 5000:5000 search-app
                    """
                }
            }
        }
        // Optional: Cleanup stage for stopping/removing the container
        stage('Cleanup') {
            steps {
                script {
                    sh """
                        docker ps -q --filter "ancestor=search-app" | xargs docker stop
                        docker ps -q --filter "ancestor=search-app" | xargs docker rm
                    """
                }
            }
        }
    }
}
 
